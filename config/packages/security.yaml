security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    cci:
                        password: cci
                        roles: ROLE_ADMIN
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            anonymous: true
            pattern: ^/admin

            # activate different ways to authenticate

            http_basic:
                realm: 'Admin'
                provider: in_memory
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
        front:
            pattern: ^/
#            user_checker: fos_user.user_checker
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                check_path: fos_user_security_check
                login_path: fos_user_security_login
            anonymous:    true
            logout:
                path: fos_user_security_logout
                target: fos_user_security_login

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/(login|register|resetting)\/?$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/api, role: [ROLE_USER] }
         - { path: ^/admin, roles: ROLE_ADMIN }
